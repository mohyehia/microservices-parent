apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: keycloak-sc
provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate
reclaimPolicy: Delete
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-pvc
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: 'keycloak-sc'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak-ctr
          image: quay.io/keycloak/keycloak:21.0.2
          args:
            - 'start-dev'
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              port: 8080
              path: /realms/master
          env:
            - name: KC_PROXY
              valueFrom:
                configMapKeyRef:
                  key: keycloakProxy
                  name: keycloak-cm
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  key: keycloakAdminUsername
                  name: keycloak-secret
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: keycloakAdminPassword
                  name: keycloak-secret
          volumeMounts:
            - mountPath: /opt/keycloak/data
              name: keycloak-vol
      volumes:
        - name: keycloak-vol
          persistentVolumeClaim:
            claimName: keycloak-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: keycloak